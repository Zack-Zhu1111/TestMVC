@using TestMVC.Core;
@{
    Layout = null;
    var _action = ViewContext.RouteData.Values["action"].ToString();
    PagerHelper _pager = ViewBag.Pager as PagerHelper;
    var routeValues = ViewContext.RouteData.Values;
    foreach (string key in Request.QueryString.Keys)
    {
        routeValues[key] = Request.QueryString[key];
    }
}
<style>
    #pagination{
        margin:0px;
        padding:0px;
        list-style:none;
        display:inline;
    }
    #pagination li{
        width:24px;
        height:24px;
        border:1px solid blue;
        display:inline-block;
    }
    #pagination li:hover{
        background-color:red;
    }
</style>
<div style="text-align:center">
    <ul class="pagination">
        @if (_pager.PageIndex == 1)
        {

            <li><a href="###">&laquo;</a></li>
        }
        else
        {
            routeValues["page"] = _pager.PageIndex - 1;

            <li>
                @Html.ActionLink("«", _action, routeValues)
            </li>
        }
        @foreach (int p in _pager.Pages)
        {
            if (p < 0)
            {
                <li><a>- - -</a></li>
            }
            else if (p == _pager.PageIndex)
            {
                <li class="active" style="background-color:red">
                    <a href="#">@p</a>
                </li>
            }
            else
            {
                routeValues["page"] = p;
                <li>@Html.ActionLink(p.ToString(), _action, routeValues)</li>
            }
        }
        @if (_pager.PageIndex == _pager.PageCount)
        {
            <li><a href="###">&raquo;</a></li>
        }
        else
        {
            routeValues["page"] = _pager.PageIndex + 1;
            <li>
                @Html.ActionLink("»", _action, routeValues)
            </li>
        }
    </ul>
</div>
